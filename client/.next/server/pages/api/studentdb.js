"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/studentdb";
exports.ids = ["pages/api/studentdb"];
exports.modules = {

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("mongodb");

/***/ }),

/***/ "(api)/./lib/mongodb.js":
/*!************************!*\
  !*** ./lib/mongodb.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_0__);\n\nif (!process.env.MONGODB_URI) {\n    throw new Error('Invalid environment variable: \"MONGODB_URI\"');\n}\nconst uri = \"mongodb+srv://admin:admin@nicolecluster.votszzm.mongodb.net/\";\nconst options = {};\nlet client;\nlet clientPromise;\nif (!process.env.MONGODB_URI) {\n    throw new Error(\"Please add your Mongo URI to .env.local\");\n}\nif (true) {\n    // In development mode, use a global variable so that the value\n    // is preserved across module reloads caused by HMR (Hot Module Replacement).\n    if (!global._mongoClientPromise) {\n        client = new mongodb__WEBPACK_IMPORTED_MODULE_0__.MongoClient(uri, options);\n        global._mongoClientPromise = client.connect();\n    }\n    clientPromise = global._mongoClientPromise;\n} else {}\n// Export a module-scoped MongoClient promise. By doing this in a\n// separate module, the client can be shared across functions.\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clientPromise);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvbW9uZ29kYi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUM7QUFFckMsSUFBSSxDQUFDQyxRQUFRQyxHQUFHLENBQUNDLFdBQVcsRUFBRTtJQUM1QixNQUFNLElBQUlDLE1BQU0sK0NBQStDO0FBQ2pFLENBQUM7QUFFRCxNQUFNQyxNQUFPO0FBQ2IsTUFBTUMsVUFBVSxDQUFDO0FBRWpCLElBQUlDO0FBQ0osSUFBSUM7QUFFSixJQUFJLENBQUNQLFFBQVFDLEdBQUcsQ0FBQ0MsV0FBVyxFQUFFO0lBQzVCLE1BQU0sSUFBSUMsTUFBTSwyQ0FBMkM7QUFDN0QsQ0FBQztBQUVELElBQUlILElBQXlCLEVBQWU7SUFDMUMsK0RBQStEO0lBQy9ELDZFQUE2RTtJQUM3RSxJQUFJLENBQUNRLE9BQU9DLG1CQUFtQixFQUFFO1FBQy9CSCxTQUFTLElBQUlQLGdEQUFXQSxDQUFDSyxLQUFLQztRQUM5QkcsT0FBT0MsbUJBQW1CLEdBQUdILE9BQU9JLE9BQU87SUFDN0MsQ0FBQztJQUNESCxnQkFBZ0JDLE9BQU9DLG1CQUFtQjtBQUM1QyxPQUFPLEVBSU47QUFFRCxpRUFBaUU7QUFDakUsOERBQThEO0FBQzlELGlFQUFlRixhQUFhQSxFQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3R1ZGVudC1pbi8uL2xpYi9tb25nb2RiLmpzP2Q5MjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9uZ29DbGllbnQgfSBmcm9tICdtb25nb2RiJ1xyXG5cclxuaWYgKCFwcm9jZXNzLmVudi5NT05HT0RCX1VSSSkge1xyXG4gIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBlbnZpcm9ubWVudCB2YXJpYWJsZTogXCJNT05HT0RCX1VSSVwiJyk7XHJcbn1cclxuXHJcbmNvbnN0IHVyaSA9ICBcIm1vbmdvZGIrc3J2Oi8vYWRtaW46YWRtaW5Abmljb2xlY2x1c3Rlci52b3RzenptLm1vbmdvZGIubmV0L1wiO1xyXG5jb25zdCBvcHRpb25zID0ge31cclxuXHJcbmxldCBjbGllbnQ7XHJcbmxldCBjbGllbnRQcm9taXNlOyBcclxuXHJcbmlmICghcHJvY2Vzcy5lbnYuTU9OR09EQl9VUkkpIHtcclxuICB0aHJvdyBuZXcgRXJyb3IoJ1BsZWFzZSBhZGQgeW91ciBNb25nbyBVUkkgdG8gLmVudi5sb2NhbCcpO1xyXG59XHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcclxuICAvLyBJbiBkZXZlbG9wbWVudCBtb2RlLCB1c2UgYSBnbG9iYWwgdmFyaWFibGUgc28gdGhhdCB0aGUgdmFsdWVcclxuICAvLyBpcyBwcmVzZXJ2ZWQgYWNyb3NzIG1vZHVsZSByZWxvYWRzIGNhdXNlZCBieSBITVIgKEhvdCBNb2R1bGUgUmVwbGFjZW1lbnQpLlxyXG4gIGlmICghZ2xvYmFsLl9tb25nb0NsaWVudFByb21pc2UpIHtcclxuICAgIGNsaWVudCA9IG5ldyBNb25nb0NsaWVudCh1cmksIG9wdGlvbnMpXHJcbiAgICBnbG9iYWwuX21vbmdvQ2xpZW50UHJvbWlzZSA9IGNsaWVudC5jb25uZWN0KClcclxuICB9XHJcbiAgY2xpZW50UHJvbWlzZSA9IGdsb2JhbC5fbW9uZ29DbGllbnRQcm9taXNlXHJcbn0gZWxzZSB7XHJcbiAgLy8gSW4gcHJvZHVjdGlvbiBtb2RlLCBpdCdzIGJlc3QgdG8gbm90IHVzZSBhIGdsb2JhbCB2YXJpYWJsZS5cclxuICBjbGllbnQgPSBuZXcgTW9uZ29DbGllbnQodXJpLCBvcHRpb25zKVxyXG4gIGNsaWVudFByb21pc2UgPSBjbGllbnQuY29ubmVjdCgpXHJcbn1cclxuXHJcbi8vIEV4cG9ydCBhIG1vZHVsZS1zY29wZWQgTW9uZ29DbGllbnQgcHJvbWlzZS4gQnkgZG9pbmcgdGhpcyBpbiBhXHJcbi8vIHNlcGFyYXRlIG1vZHVsZSwgdGhlIGNsaWVudCBjYW4gYmUgc2hhcmVkIGFjcm9zcyBmdW5jdGlvbnMuXHJcbmV4cG9ydCBkZWZhdWx0IGNsaWVudFByb21pc2UiXSwibmFtZXMiOlsiTW9uZ29DbGllbnQiLCJwcm9jZXNzIiwiZW52IiwiTU9OR09EQl9VUkkiLCJFcnJvciIsInVyaSIsIm9wdGlvbnMiLCJjbGllbnQiLCJjbGllbnRQcm9taXNlIiwiZ2xvYmFsIiwiX21vbmdvQ2xpZW50UHJvbWlzZSIsImNvbm5lY3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./lib/mongodb.js\n");

/***/ }),

/***/ "(api)/./pages/api/studentdb.js":
/*!********************************!*\
  !*** ./pages/api/studentdb.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/mongodb */ \"(api)/./lib/mongodb.js\");\n\nasync function handler(req, res) {\n    try {\n        const client = await _lib_mongodb__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n        const db = client.db(\"StudentsDb\");\n        const collectionName = req.query.collection;\n        switch(req.method){\n            case \"GET\":\n                {\n                    const studentCPE = await db.collection(collectionName).find({}).sort({\n                        metacritic: -1\n                    }).limit(10).toArray();\n                    res.status(200).json(studentCPE);\n                }\n                break;\n            case \"POST\":\n                {\n                    const { name , number  } = req.body; //the object that we will pus is {name: \"SNdjnfjn\", number: \"34534\"}\n                    const nameExist = await db.collection(collectionName).findOne({\n                        name\n                    });\n                    const numExist = await db.collection(collectionName).findOne({\n                        number\n                    });\n                    if (nameExist) {\n                        // Data exists in the collection\n                        console.log(\"Data exists:\");\n                        res.json({\n                            message: \"Error. Student name exists\"\n                        });\n                    } else if (numExist) {\n                        // Data exists in the collection\n                        console.log(\"Data exists:\");\n                        res.json({\n                            message: \"Error. Student number exists\"\n                        });\n                    } else if (numExist && nameExist) {\n                        // Data exists in the collection\n                        console.log(\"Data exists:\");\n                        res.json({\n                            message: \"Error. Student name and number exists\"\n                        });\n                    } else {\n                        // Data does not exist in the collection\n                        const studentCPE = await db.collection(collectionName).insertOne({\n                            name,\n                            number\n                        });\n                        res.status(200).json({\n                            data: studentCPE,\n                            message: \"Successfully added new student.\"\n                        });\n                    }\n                }\n                break;\n            case \"DELETE\":\n                {\n                    const deleteAll = req.query.deleteAll;\n                    if (deleteAll) {\n                        const result = await db.collection(collectionName).deleteMany({});\n                        if (result.deletedCount >= 1) {\n                            res.status(200).json({\n                                message: \"Successfully deleted all document. \" + deleteAll\n                            });\n                        } else {\n                            res.status(200).json({\n                                message: \"No Data to delete. Empty.\"\n                            });\n                        }\n                    } else if (!deleteAll) {\n                        const studentId = req.body.idNumber; // Access idNumber from the request body\n                        const query1 = {\n                            id: studentId\n                        }; //in the database we have: {_id, id, name, number}.. we will query the \"id\"\n                        const result = await db.collection(collectionName).deleteOne(query1);\n                        if (result.deletedCount === 1) {\n                            res.status(200).json({\n                                message: \"Successfully deleted one document. \" + deleteAll\n                            });\n                        } else {\n                            res.status(200).json({\n                                message: \"No Data to delete. Empty.\"\n                            });\n                        }\n                    } else {\n                        res.json({\n                            message: \"Confused: \" + deleteAll\n                        });\n                    }\n                }\n                break;\n            case \"PUT\":\n                {\n                    const { name , number , prevName , prevNum  } = req.body; //the object that we will pus is {name: \"SNdjnfjn\", number: \"34534\"}\n                    const nameExist = await db.collection(collectionName).findOne({\n                        name\n                    });\n                    const numExist = await db.collection(collectionName).findOne({\n                        number\n                    });\n                    if (nameExist != prevName) {\n                        // Data exists in the collection\n                        console.log(nameExist);\n                        res.json({\n                            message: \"Error. Student name exists\"\n                        });\n                    } else if (numExist != prevNum) {\n                        // Data exists in the collection\n                        console.log(\"Data exists:\");\n                        res.json({\n                            message: \"Error. Student number exists\"\n                        });\n                    } else if (numExist != prevNum && nameExist != prevName) {\n                        // Data exists in the collection\n                        console.log(\"Data exists:\");\n                        res.json({\n                            message: \"Error. Student name and number exists\"\n                        });\n                    } else {\n                        // Data does not exist in the collection\n                        const updateData = {\n                            $set: {\n                                name: name,\n                                idNumber: number\n                            }\n                        };\n                        const studentCPE = await db.collection(collectionName).updateOne(query, updateData);\n                        res.status(200).json({\n                            data: studentCPE,\n                            message: \"Successfully updated student data.\"\n                        });\n                    }\n                }\n        }\n    } catch (e) {\n        console.error(e);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/studentdb.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/studentdb.js"));
module.exports = __webpack_exports__;

})();